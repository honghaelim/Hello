1. train : 대구 + 전국 // test : 대구[ECLO]

2. 사고일시 -> 연, 월, 일, 시간 분리
3. 공휴일(Holiday) 추가 : 한국의 공휴일, 주말 이면 1, 아니면 0
4. 시군수 -> 도시, 구, 동 분리
5. 도로형태 -> 도로형태1, 도로형태2 분리 & 도로형태2 삭제// 도로형태1만 사용
6. 가해/피해 운전자 연령 수치화

7. 사고유형별로 데이터 전처리
	- 차량단독이 아닌데 결측치 있으면 drop
	- 차량단독인데 '노면, 가해연령, 도시'에 결측치 있으면 drop
	- 차량단독에서 '피해차종' "없음"으로 값 통일

8. 대구 데이터에 없는 값(object형)을 가지는 전체 도시 데이터 drop 
	- '도시', '구', '동', "도로형태1"

9. 사고유형별로 train/ test set 만들어서 예측
	- train ECLO 이상치(1%) 제거 : '노면상태', '사고유형', '사고유형 - 세부분류', '도로형태' 별 이상치 1% 제거
	- 동별 가해&피해 운전자 평균 연령 : 차량단독 "가해"만
	- 동별 가해&피해 운전자 평균 성별 : 차량단독 "가해"만
	- 구별 가해&피해 노인운전자 위험도 : 차대차만 "가해", "피해" 모두
	- 구별 가해&피해 운전자 차종 위험도 : 차대차만 "가해", "피해" 모두
	- 원핫인코딩 : 노면상태, 도로형태1
	- 라벨인코딩 : 요일, 도시, 구, 동, 도로형태

10. 모델 학습 : XGBOOST, LGBM, Catboost
	- 사고유형별 각각 학습
11. 앙상블 : LGBM x 0.2 + Catboost x 0.8
	- 0.2, 0.8은 성능이 가장 좋은 가중치인듯함
